# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Genero(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id_genero: int=None, nombre: str=None, descripcion: str=None):  # noqa: E501
        """Genero - a model defined in Swagger

        :param id_genero: The id_genero of this Genero.  # noqa: E501
        :type id_genero: int
        :param nombre: The nombre of this Genero.  # noqa: E501
        :type nombre: str
        :param descripcion: The descripcion of this Genero.  # noqa: E501
        :type descripcion: str
        """
        self.swagger_types = {
            'id_genero': int,
            'nombre': str,
            'descripcion': str
        }

        self.attribute_map = {
            'id_genero': 'id_genero',
            'nombre': 'nombre',
            'descripcion': 'descripcion'
        }
        self._id_genero = id_genero
        self._nombre = nombre
        self._descripcion = descripcion

    @classmethod
    def from_dict(cls, dikt) -> 'Genero':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Genero of this Genero.  # noqa: E501
        :rtype: Genero
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id_genero(self) -> int:
        """Gets the id_genero of this Genero.


        :return: The id_genero of this Genero.
        :rtype: int
        """
        return self._id_genero

    @id_genero.setter
    def id_genero(self, id_genero: int):
        """Sets the id_genero of this Genero.


        :param id_genero: The id_genero of this Genero.
        :type id_genero: int
        """

        self._id_genero = id_genero

    @property
    def nombre(self) -> str:
        """Gets the nombre of this Genero.


        :return: The nombre of this Genero.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """Sets the nombre of this Genero.


        :param nombre: The nombre of this Genero.
        :type nombre: str
        """

        self._nombre = nombre

    @property
    def descripcion(self) -> str:
        """Gets the descripcion of this Genero.


        :return: The descripcion of this Genero.
        :rtype: str
        """
        return self._descripcion

    @descripcion.setter
    def descripcion(self, descripcion: str):
        """Sets the descripcion of this Genero.


        :param descripcion: The descripcion of this Genero.
        :type descripcion: str
        """

        self._descripcion = descripcion
