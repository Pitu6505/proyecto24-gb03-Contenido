# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ContenidosBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, titulo: str=None, descripcion: str=None, tipo: str=None, fecha_lanzamiento: date=None, duracion: int=None, trailer_url: str=None, portada_url: str=None, stream_url: str=None, id_actores: List[int]=None, id_generos: List[int]=None):  # noqa: E501
        """ContenidosBody - a model defined in Swagger

        :param titulo: The titulo of this ContenidosBody.  # noqa: E501
        :type titulo: str
        :param descripcion: The descripcion of this ContenidosBody.  # noqa: E501
        :type descripcion: str
        :param tipo: The tipo of this ContenidosBody.  # noqa: E501
        :type tipo: str
        :param fecha_lanzamiento: The fecha_lanzamiento of this ContenidosBody.  # noqa: E501
        :type fecha_lanzamiento: date
        :param duracion: The duracion of this ContenidosBody.  # noqa: E501
        :type duracion: int
        :param trailer_url: The trailer_url of this ContenidosBody.  # noqa: E501
        :type trailer_url: str
        :param portada_url: The portada_url of this ContenidosBody.  # noqa: E501
        :type portada_url: str
        :param stream_url: The stream_url of this ContenidosBody.  # noqa: E501
        :type stream_url: str
        :param id_actores: The id_actores of this ContenidosBody.  # noqa: E501
        :type id_actores: List[int]
        :param id_generos: The id_generos of this ContenidosBody.  # noqa: E501
        :type id_generos: List[int]
        """
        self.swagger_types = {
            'titulo': str,
            'descripcion': str,
            'tipo': str,
            'fecha_lanzamiento': date,
            'duracion': int,
            'trailer_url': str,
            'portada_url': str,
            'stream_url': str,
            'id_actores': List[int],
            'id_generos': List[int]
        }

        self.attribute_map = {
            'titulo': 'titulo',
            'descripcion': 'descripcion',
            'tipo': 'tipo',
            'fecha_lanzamiento': 'fecha_lanzamiento',
            'duracion': 'duracion',
            'trailer_url': 'trailer_url',
            'portada_url': 'portada_url',
            'stream_url': 'stream_url',
            'id_actores': 'id_actores',
            'id_generos': 'id_generos'
        }
        self._titulo = titulo
        self._descripcion = descripcion
        self._tipo = tipo
        self._fecha_lanzamiento = fecha_lanzamiento
        self._duracion = duracion
        self._trailer_url = trailer_url
        self._portada_url = portada_url
        self._stream_url = stream_url
        self._id_actores = id_actores
        self._id_generos = id_generos

    @classmethod
    def from_dict(cls, dikt) -> 'ContenidosBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The contenidos_body of this ContenidosBody.  # noqa: E501
        :rtype: ContenidosBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def titulo(self) -> str:
        """Gets the titulo of this ContenidosBody.


        :return: The titulo of this ContenidosBody.
        :rtype: str
        """
        return self._titulo

    @titulo.setter
    def titulo(self, titulo: str):
        """Sets the titulo of this ContenidosBody.


        :param titulo: The titulo of this ContenidosBody.
        :type titulo: str
        """

        self._titulo = titulo

    @property
    def descripcion(self) -> str:
        """Gets the descripcion of this ContenidosBody.


        :return: The descripcion of this ContenidosBody.
        :rtype: str
        """
        return self._descripcion

    @descripcion.setter
    def descripcion(self, descripcion: str):
        """Sets the descripcion of this ContenidosBody.


        :param descripcion: The descripcion of this ContenidosBody.
        :type descripcion: str
        """

        self._descripcion = descripcion

    @property
    def tipo(self) -> str:
        """Gets the tipo of this ContenidosBody.


        :return: The tipo of this ContenidosBody.
        :rtype: str
        """
        return self._tipo

    @tipo.setter
    def tipo(self, tipo: str):
        """Sets the tipo of this ContenidosBody.


        :param tipo: The tipo of this ContenidosBody.
        :type tipo: str
        """
        allowed_values = ["pelicula", "serie"]  # noqa: E501
        if tipo not in allowed_values:
            raise ValueError(
                "Invalid value for `tipo` ({0}), must be one of {1}"
                .format(tipo, allowed_values)
            )

        self._tipo = tipo

    @property
    def fecha_lanzamiento(self) -> date:
        """Gets the fecha_lanzamiento of this ContenidosBody.


        :return: The fecha_lanzamiento of this ContenidosBody.
        :rtype: date
        """
        return self._fecha_lanzamiento

    @fecha_lanzamiento.setter
    def fecha_lanzamiento(self, fecha_lanzamiento: date):
        """Sets the fecha_lanzamiento of this ContenidosBody.


        :param fecha_lanzamiento: The fecha_lanzamiento of this ContenidosBody.
        :type fecha_lanzamiento: date
        """

        self._fecha_lanzamiento = fecha_lanzamiento

    @property
    def duracion(self) -> int:
        """Gets the duracion of this ContenidosBody.


        :return: The duracion of this ContenidosBody.
        :rtype: int
        """
        return self._duracion

    @duracion.setter
    def duracion(self, duracion: int):
        """Sets the duracion of this ContenidosBody.


        :param duracion: The duracion of this ContenidosBody.
        :type duracion: int
        """

        self._duracion = duracion

    @property
    def trailer_url(self) -> str:
        """Gets the trailer_url of this ContenidosBody.


        :return: The trailer_url of this ContenidosBody.
        :rtype: str
        """
        return self._trailer_url

    @trailer_url.setter
    def trailer_url(self, trailer_url: str):
        """Sets the trailer_url of this ContenidosBody.


        :param trailer_url: The trailer_url of this ContenidosBody.
        :type trailer_url: str
        """

        self._trailer_url = trailer_url

    @property
    def portada_url(self) -> str:
        """Gets the portada_url of this ContenidosBody.


        :return: The portada_url of this ContenidosBody.
        :rtype: str
        """
        return self._portada_url

    @portada_url.setter
    def portada_url(self, portada_url: str):
        """Sets the portada_url of this ContenidosBody.


        :param portada_url: The portada_url of this ContenidosBody.
        :type portada_url: str
        """

        self._portada_url = portada_url

    @property
    def stream_url(self) -> str:
        """Gets the stream_url of this ContenidosBody.


        :return: The stream_url of this ContenidosBody.
        :rtype: str
        """
        return self._stream_url

    @stream_url.setter
    def stream_url(self, stream_url: str):
        """Sets the stream_url of this ContenidosBody.


        :param stream_url: The stream_url of this ContenidosBody.
        :type stream_url: str
        """

        self._stream_url = stream_url

    @property
    def id_actores(self) -> List[int]:
        """Gets the id_actores of this ContenidosBody.

        Lista de IDs de actores asociados al contenido  # noqa: E501

        :return: The id_actores of this ContenidosBody.
        :rtype: List[int]
        """
        return self._id_actores

    @id_actores.setter
    def id_actores(self, id_actores: List[int]):
        """Sets the id_actores of this ContenidosBody.

        Lista de IDs de actores asociados al contenido  # noqa: E501

        :param id_actores: The id_actores of this ContenidosBody.
        :type id_actores: List[int]
        """

        self._id_actores = id_actores

    @property
    def id_generos(self) -> List[int]:
        """Gets the id_generos of this ContenidosBody.

        Lista de IDs de géneros asociados al contenido  # noqa: E501

        :return: The id_generos of this ContenidosBody.
        :rtype: List[int]
        """
        return self._id_generos

    @id_generos.setter
    def id_generos(self, id_generos: List[int]):
        """Sets the id_generos of this ContenidosBody.

        Lista de IDs de géneros asociados al contenido  # noqa: E501

        :param id_generos: The id_generos of this ContenidosBody.
        :type id_generos: List[int]
        """

        self._id_generos = id_generos
